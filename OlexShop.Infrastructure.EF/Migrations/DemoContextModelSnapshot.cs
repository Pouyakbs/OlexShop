// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OlexShop.Infrastructure.EF;

namespace OlexShop.Infrastructure.EF.Migrations
{
    [DbContext(typeof(DemoContext))]
    partial class DemoContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.26")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("OlexShop.Core.Domain.Entities.AdminAuthentication", b =>
                {
                    b.Property<int>("UsernameId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(60)");

                    b.HasKey("UsernameId");

                    b.ToTable("AdminAuthentication");
                });

            modelBuilder.Entity("OlexShop.Core.Domain.Entities.Ads", b =>
                {
                    b.Property<int>("AdsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AdsId");

                    b.ToTable("Ads");
                });

            modelBuilder.Entity("OlexShop.Core.Domain.Entities.CartLine", b =>
                {
                    b.Property<int>("CartLineId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int?>("ProductsProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("CartLineId");

                    b.HasIndex("ProductId");

                    b.HasIndex("ProductsProductId");

                    b.ToTable("CartLine");
                });

            modelBuilder.Entity("OlexShop.Core.Domain.Entities.News", b =>
                {
                    b.Property<int>("NewsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int?>("NewsCategoryCategoryId")
                        .HasColumnType("int");

                    b.Property<string>("NewsImages")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NewsSummary")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NewsText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NewsTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(900)");

                    b.Property<DateTime>("PubDate")
                        .HasColumnType("datetime");

                    b.HasKey("NewsId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("NewsCategoryCategoryId");

                    b.ToTable("News");
                });

            modelBuilder.Entity("OlexShop.Core.Domain.Entities.NewsCategory", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CategoryName")
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("CategoryId");

                    b.ToTable("NewsCategory");
                });

            modelBuilder.Entity("OlexShop.Core.Domain.Entities.NewsComment", b =>
                {
                    b.Property<int>("CommentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CommentText")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("NewsId")
                        .HasColumnType("int");

                    b.Property<int?>("NewsId1")
                        .HasColumnType("int");

                    b.Property<DateTime>("PubTime")
                        .HasColumnType("datetime");

                    b.HasKey("CommentId");

                    b.HasIndex("NewsId");

                    b.HasIndex("NewsId1");

                    b.ToTable("NewsComment");
                });

            modelBuilder.Entity("OlexShop.Core.Domain.Entities.ProductImages", b =>
                {
                    b.Property<int>("ImageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<string>("ProductImage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProductsProductId")
                        .HasColumnType("int");

                    b.HasKey("ImageId");

                    b.HasIndex("ProductId");

                    b.HasIndex("ProductsProductId");

                    b.ToTable("ProductImages");
                });

            modelBuilder.Entity("OlexShop.Core.Domain.Entities.Products", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasColumnType("nvarchar(60)");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Color")
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Options")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("nvarchar(60)");

                    b.Property<int?>("ProductsCategoryCategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("PubDate")
                        .HasColumnType("datetime");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("ProductId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("ProductsCategoryCategoryId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("OlexShop.Core.Domain.Entities.ProductsCategory", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(60)");

                    b.HasKey("CategoryId");

                    b.ToTable("ProductsCategory");
                });

            modelBuilder.Entity("OlexShop.Core.Domain.Entities.ProductsComment", b =>
                {
                    b.Property<int>("CommentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CommentText")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(60)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int?>("ProductsProductId")
                        .HasColumnType("int");

                    b.Property<DateTime>("PubTime")
                        .HasColumnType("datetime");

                    b.HasKey("CommentId");

                    b.HasIndex("ProductId");

                    b.HasIndex("ProductsProductId");

                    b.ToTable("ProductsComment");
                });

            modelBuilder.Entity("OlexShop.Core.Domain.Entities.UserAuthentication", b =>
                {
                    b.Property<int>("UsernameId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(70)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ProfileImage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(60)");

                    b.HasKey("UsernameId");

                    b.ToTable("UserAuthentication");
                });

            modelBuilder.Entity("OlexShop.Core.Domain.Entities.CartLine", b =>
                {
                    b.HasOne("OlexShop.Core.Domain.Entities.Products", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OlexShop.Core.Domain.Entities.Products", null)
                        .WithMany("CartLines")
                        .HasForeignKey("ProductsProductId");
                });

            modelBuilder.Entity("OlexShop.Core.Domain.Entities.News", b =>
                {
                    b.HasOne("OlexShop.Core.Domain.Entities.NewsCategory", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OlexShop.Core.Domain.Entities.NewsCategory", null)
                        .WithMany("News")
                        .HasForeignKey("NewsCategoryCategoryId");
                });

            modelBuilder.Entity("OlexShop.Core.Domain.Entities.NewsComment", b =>
                {
                    b.HasOne("OlexShop.Core.Domain.Entities.News", "News")
                        .WithMany()
                        .HasForeignKey("NewsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OlexShop.Core.Domain.Entities.News", null)
                        .WithMany("Comments")
                        .HasForeignKey("NewsId1");
                });

            modelBuilder.Entity("OlexShop.Core.Domain.Entities.ProductImages", b =>
                {
                    b.HasOne("OlexShop.Core.Domain.Entities.Products", "Products")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OlexShop.Core.Domain.Entities.Products", null)
                        .WithMany("Images")
                        .HasForeignKey("ProductsProductId");
                });

            modelBuilder.Entity("OlexShop.Core.Domain.Entities.Products", b =>
                {
                    b.HasOne("OlexShop.Core.Domain.Entities.ProductsCategory", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OlexShop.Core.Domain.Entities.ProductsCategory", null)
                        .WithMany("Products")
                        .HasForeignKey("ProductsCategoryCategoryId");
                });

            modelBuilder.Entity("OlexShop.Core.Domain.Entities.ProductsComment", b =>
                {
                    b.HasOne("OlexShop.Core.Domain.Entities.Products", "Products")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OlexShop.Core.Domain.Entities.Products", null)
                        .WithMany("Comments")
                        .HasForeignKey("ProductsProductId");
                });
#pragma warning restore 612, 618
        }
    }
}
